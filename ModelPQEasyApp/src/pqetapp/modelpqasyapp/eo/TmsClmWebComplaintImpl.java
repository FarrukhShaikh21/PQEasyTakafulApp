package pqetapp.modelpqasyapp.eo;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

import pqetapp.modelpqasyapp.gclass.PQEasyTakafulModelGlobal;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 04 11:56:49 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TmsClmWebComplaintImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ComplaintIdPk {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getComplaintIdPk();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setComplaintIdPk((Number) value);
            }
        }
        ,
        ComplaintType {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getComplaintType();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setComplaintType((Number) value);
            }
        }
        ,
        ParticularPersonName {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getParticularPersonName();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setParticularPersonName((String) value);
            }
        }
        ,
        Designation {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getDesignation();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setDesignation((String) value);
            }
        }
        ,
        Branch {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getBranch();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setBranch((String) value);
            }
        }
        ,
        DiscussedWithStaffFlag {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getDiscussedWithStaffFlag();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setDiscussedWithStaffFlag((String) value);
            }
        }
        ,
        DiscussedDetail {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getDiscussedDetail();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setDiscussedDetail((String) value);
            }
        }
        ,
        DiscussedPersonName {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getDiscussedPersonName();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setDiscussedPersonName((String) value);
            }
        }
        ,
        DiscussedResult {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getDiscussedResult();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setDiscussedResult((String) value);
            }
        }
        ,
        Remarks {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getRemarks();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        ParticipantIdFk {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getParticipantIdFk();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setParticipantIdFk((Number) value);
            }
        }
        ,
        EnterDate {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getEnterDate();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setEnterDate((Date) value);
            }
        }
        ,
        TmsClmWebComplaintDtl {
            public Object get(TmsClmWebComplaintImpl obj) {
                return obj.getTmsClmWebComplaintDtl();
            }

            public void put(TmsClmWebComplaintImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(TmsClmWebComplaintImpl object);

        public abstract void put(TmsClmWebComplaintImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int COMPLAINTIDPK = AttributesEnum.ComplaintIdPk.index();
    public static final int COMPLAINTTYPE = AttributesEnum.ComplaintType.index();
    public static final int PARTICULARPERSONNAME = AttributesEnum.ParticularPersonName.index();
    public static final int DESIGNATION = AttributesEnum.Designation.index();
    public static final int BRANCH = AttributesEnum.Branch.index();
    public static final int DISCUSSEDWITHSTAFFFLAG = AttributesEnum.DiscussedWithStaffFlag.index();
    public static final int DISCUSSEDDETAIL = AttributesEnum.DiscussedDetail.index();
    public static final int DISCUSSEDPERSONNAME = AttributesEnum.DiscussedPersonName.index();
    public static final int DISCUSSEDRESULT = AttributesEnum.DiscussedResult.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int PARTICIPANTIDFK = AttributesEnum.ParticipantIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int TMSCLMWEBCOMPLAINTDTL = AttributesEnum.TmsClmWebComplaintDtl.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TmsClmWebComplaintImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqetapp.modelpqasyapp.eo.TmsClmWebComplaint");
    }

    /**
     * Gets the attribute value for ComplaintIdPk, using the alias name ComplaintIdPk.
     * @return the value of ComplaintIdPk
     */
    public Number getComplaintIdPk() {
        return (Number) getAttributeInternal(COMPLAINTIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ComplaintIdPk.
     * @param value value to set the ComplaintIdPk
     */
    public void setComplaintIdPk(Number value) {
        setAttributeInternal(COMPLAINTIDPK, value);
    }

    /**
     * Gets the attribute value for ComplaintType, using the alias name ComplaintType.
     * @return the value of ComplaintType
     */
    public Number getComplaintType() {
        return (Number) getAttributeInternal(COMPLAINTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ComplaintType.
     * @param value value to set the ComplaintType
     */
    public void setComplaintType(Number value) {
        setAttributeInternal(COMPLAINTTYPE, value);
    }

    /**
     * Gets the attribute value for ParticularPersonName, using the alias name ParticularPersonName.
     * @return the value of ParticularPersonName
     */
    public String getParticularPersonName() {
        return (String) getAttributeInternal(PARTICULARPERSONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParticularPersonName.
     * @param value value to set the ParticularPersonName
     */
    public void setParticularPersonName(String value) {
        setAttributeInternal(PARTICULARPERSONNAME, value);
    }

    /**
     * Gets the attribute value for Designation, using the alias name Designation.
     * @return the value of Designation
     */
    public String getDesignation() {
        return (String) getAttributeInternal(DESIGNATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Designation.
     * @param value value to set the Designation
     */
    public void setDesignation(String value) {
        setAttributeInternal(DESIGNATION, value);
    }

    /**
     * Gets the attribute value for Branch, using the alias name Branch.
     * @return the value of Branch
     */
    public String getBranch() {
        return (String) getAttributeInternal(BRANCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for Branch.
     * @param value value to set the Branch
     */
    public void setBranch(String value) {
        setAttributeInternal(BRANCH, value);
    }

    /**
     * Gets the attribute value for DiscussedWithStaffFlag, using the alias name DiscussedWithStaffFlag.
     * @return the value of DiscussedWithStaffFlag
     */
    public String getDiscussedWithStaffFlag() {
        return (String) getAttributeInternal(DISCUSSEDWITHSTAFFFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscussedWithStaffFlag.
     * @param value value to set the DiscussedWithStaffFlag
     */
    public void setDiscussedWithStaffFlag(String value) {
        setAttributeInternal(DISCUSSEDWITHSTAFFFLAG, value);
    }

    /**
     * Gets the attribute value for DiscussedDetail, using the alias name DiscussedDetail.
     * @return the value of DiscussedDetail
     */
    public String getDiscussedDetail() {
        return (String) getAttributeInternal(DISCUSSEDDETAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscussedDetail.
     * @param value value to set the DiscussedDetail
     */
    public void setDiscussedDetail(String value) {
        setAttributeInternal(DISCUSSEDDETAIL, value);
    }

    /**
     * Gets the attribute value for DiscussedPersonName, using the alias name DiscussedPersonName.
     * @return the value of DiscussedPersonName
     */
    public String getDiscussedPersonName() {
        return (String) getAttributeInternal(DISCUSSEDPERSONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscussedPersonName.
     * @param value value to set the DiscussedPersonName
     */
    public void setDiscussedPersonName(String value) {
        setAttributeInternal(DISCUSSEDPERSONNAME, value);
    }

    /**
     * Gets the attribute value for DiscussedResult, using the alias name DiscussedResult.
     * @return the value of DiscussedResult
     */
    public String getDiscussedResult() {
        return (String) getAttributeInternal(DISCUSSEDRESULT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscussedResult.
     * @param value value to set the DiscussedResult
     */
    public void setDiscussedResult(String value) {
        setAttributeInternal(DISCUSSEDRESULT, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for ParticipantIdFk, using the alias name ParticipantIdFk.
     * @return the value of ParticipantIdFk
     */
    public Number getParticipantIdFk() {
        return (Number) getAttributeInternal(PARTICIPANTIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParticipantIdFk.
     * @param value value to set the ParticipantIdFk
     */
    public void setParticipantIdFk(Number value) {
        setAttributeInternal(PARTICIPANTIDFK, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTmsClmWebComplaintDtl() {
        return (RowIterator) getAttributeInternal(TMSCLMWEBCOMPLAINTDTL);
    }


    /**
     * @param complaintIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number complaintIdPk) {
        return new Key(new Object[] { complaintIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl seq =
                    new oracle.jbo.server.SequenceImpl("TMS_CLM_WEB_COMPLAINT_SEQ", getDBTransaction());
                setComplaintIdPk(seq.getSequenceNumber());
                //setParticipantIdFk( new Number((""+));
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

