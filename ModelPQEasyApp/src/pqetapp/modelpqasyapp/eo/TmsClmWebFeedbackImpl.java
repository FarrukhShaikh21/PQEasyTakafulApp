package pqetapp.modelpqasyapp.eo;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 04 22:35:55 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TmsClmWebFeedbackImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ClmFeedbackIdFk {
            public Object get(TmsClmWebFeedbackImpl obj) {
                return obj.getClmFeedbackIdFk();
            }

            public void put(TmsClmWebFeedbackImpl obj, Object value) {
                obj.setClmFeedbackIdFk((Number) value);
            }
        }
        ,
        FeedbackIdPk {
            public Object get(TmsClmWebFeedbackImpl obj) {
                return obj.getFeedbackIdPk();
            }

            public void put(TmsClmWebFeedbackImpl obj, Object value) {
                obj.setFeedbackIdPk((Number) value);
            }
        }
        ,
        ExcellentFlag {
            public Object get(TmsClmWebFeedbackImpl obj) {
                return obj.getExcellentFlag();
            }

            public void put(TmsClmWebFeedbackImpl obj, Object value) {
                obj.setExcellentFlag((String) value);
            }
        }
        ,
        GoodFlag {
            public Object get(TmsClmWebFeedbackImpl obj) {
                return obj.getGoodFlag();
            }

            public void put(TmsClmWebFeedbackImpl obj, Object value) {
                obj.setGoodFlag((String) value);
            }
        }
        ,
        AverageFlag {
            public Object get(TmsClmWebFeedbackImpl obj) {
                return obj.getAverageFlag();
            }

            public void put(TmsClmWebFeedbackImpl obj, Object value) {
                obj.setAverageFlag((String) value);
            }
        }
        ,
        PoorFlag {
            public Object get(TmsClmWebFeedbackImpl obj) {
                return obj.getPoorFlag();
            }

            public void put(TmsClmWebFeedbackImpl obj, Object value) {
                obj.setPoorFlag((String) value);
            }
        }
        ,
        VeryPoorFlag {
            public Object get(TmsClmWebFeedbackImpl obj) {
                return obj.getVeryPoorFlag();
            }

            public void put(TmsClmWebFeedbackImpl obj, Object value) {
                obj.setVeryPoorFlag((String) value);
            }
        }
        ,
        EnterDate {
            public Object get(TmsClmWebFeedbackImpl obj) {
                return obj.getEnterDate();
            }

            public void put(TmsClmWebFeedbackImpl obj, Object value) {
                obj.setEnterDate((Date) value);
            }
        }
        ,
        ParticipantIdFk {
            public Object get(TmsClmWebFeedbackImpl obj) {
                return obj.getParticipantIdFk();
            }

            public void put(TmsClmWebFeedbackImpl obj, Object value) {
                obj.setParticipantIdFk((Number) value);
            }
        }
        ,
        txtFeedbackValue {
            public Object get(TmsClmWebFeedbackImpl obj) {
                return obj.gettxtFeedbackValue();
            }

            public void put(TmsClmWebFeedbackImpl obj, Object value) {
                obj.settxtFeedbackValue((String) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(TmsClmWebFeedbackImpl object);

        public abstract void put(TmsClmWebFeedbackImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLMFEEDBACKIDFK = AttributesEnum.ClmFeedbackIdFk.index();
    public static final int FEEDBACKIDPK = AttributesEnum.FeedbackIdPk.index();
    public static final int EXCELLENTFLAG = AttributesEnum.ExcellentFlag.index();
    public static final int GOODFLAG = AttributesEnum.GoodFlag.index();
    public static final int AVERAGEFLAG = AttributesEnum.AverageFlag.index();
    public static final int POORFLAG = AttributesEnum.PoorFlag.index();
    public static final int VERYPOORFLAG = AttributesEnum.VeryPoorFlag.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int PARTICIPANTIDFK = AttributesEnum.ParticipantIdFk.index();
    public static final int TXTFEEDBACKVALUE = AttributesEnum.txtFeedbackValue.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TmsClmWebFeedbackImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqetapp.modelpqasyapp.eo.TmsClmWebFeedback");
    }

    /**
     * Gets the attribute value for ClmFeedbackIdFk, using the alias name ClmFeedbackIdFk.
     * @return the value of ClmFeedbackIdFk
     */
    public Number getClmFeedbackIdFk() {
        return (Number) getAttributeInternal(CLMFEEDBACKIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClmFeedbackIdFk.
     * @param value value to set the ClmFeedbackIdFk
     */
    public void setClmFeedbackIdFk(Number value) {
        setAttributeInternal(CLMFEEDBACKIDFK, value);
    }

    /**
     * Gets the attribute value for FeedbackIdPk, using the alias name FeedbackIdPk.
     * @return the value of FeedbackIdPk
     */
    public Number getFeedbackIdPk() {
        return (Number) getAttributeInternal(FEEDBACKIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for FeedbackIdPk.
     * @param value value to set the FeedbackIdPk
     */
    public void setFeedbackIdPk(Number value) {
        setAttributeInternal(FEEDBACKIDPK, value);
    }

    /**
     * Gets the attribute value for ExcellentFlag, using the alias name ExcellentFlag.
     * @return the value of ExcellentFlag
     */
    public String getExcellentFlag() {
        return (String) getAttributeInternal(EXCELLENTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExcellentFlag.
     * @param value value to set the ExcellentFlag
     */
    public void setExcellentFlag(String value) {
        setAttributeInternal(EXCELLENTFLAG, value);
    }

    /**
     * Gets the attribute value for GoodFlag, using the alias name GoodFlag.
     * @return the value of GoodFlag
     */
    public String getGoodFlag() {
        return (String) getAttributeInternal(GOODFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for GoodFlag.
     * @param value value to set the GoodFlag
     */
    public void setGoodFlag(String value) {
        setAttributeInternal(GOODFLAG, value);
    }

    /**
     * Gets the attribute value for AverageFlag, using the alias name AverageFlag.
     * @return the value of AverageFlag
     */
    public String getAverageFlag() {
        return (String) getAttributeInternal(AVERAGEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for AverageFlag.
     * @param value value to set the AverageFlag
     */
    public void setAverageFlag(String value) {
        setAttributeInternal(AVERAGEFLAG, value);
    }

    /**
     * Gets the attribute value for PoorFlag, using the alias name PoorFlag.
     * @return the value of PoorFlag
     */
    public String getPoorFlag() {
        return (String) getAttributeInternal(POORFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoorFlag.
     * @param value value to set the PoorFlag
     */
    public void setPoorFlag(String value) {
        setAttributeInternal(POORFLAG, value);
    }

    /**
     * Gets the attribute value for VeryPoorFlag, using the alias name VeryPoorFlag.
     * @return the value of VeryPoorFlag
     */
    public String getVeryPoorFlag() {
        return (String) getAttributeInternal(VERYPOORFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for VeryPoorFlag.
     * @param value value to set the VeryPoorFlag
     */
    public void setVeryPoorFlag(String value) {
        setAttributeInternal(VERYPOORFLAG, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for ParticipantIdFk, using the alias name ParticipantIdFk.
     * @return the value of ParticipantIdFk
     */
    public Number getParticipantIdFk() {
        return (Number) getAttributeInternal(PARTICIPANTIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParticipantIdFk.
     * @param value value to set the ParticipantIdFk
     */
    public void setParticipantIdFk(Number value) {
        setAttributeInternal(PARTICIPANTIDFK, value);
    }

    /**
     * Gets the attribute value for txtFeedbackValue, using the alias name txtFeedbackValue.
     * @return the value of txtFeedbackValue
     */
    public String gettxtFeedbackValue() {
        return (String) getAttributeInternal(TXTFEEDBACKVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtFeedbackValue.
     * @param value value to set the txtFeedbackValue
     */
    public void settxtFeedbackValue(String value) {
        setAttributeInternal(TXTFEEDBACKVALUE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param clmFeedbackIdFk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number clmFeedbackIdFk) {
        return new Key(new Object[] { clmFeedbackIdFk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);

        oracle.jbo.server.SequenceImpl seq =
                    new oracle.jbo.server.SequenceImpl("TMS_CLM_WEB_FEEDBACK_SEQ", getDBTransaction());
                setFeedbackIdPk(seq.getSequenceNumber());
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT) {
            System.out.println(gettxtFeedbackValue());
       
        if (gettxtFeedbackValue().equals("E")) {
            populateAttributeAsChanged(EXCELLENTFLAG, "Y");
       }
      else  if (gettxtFeedbackValue().equals("G")) {
            populateAttributeAsChanged(GOODFLAG, "Y");
        }
     else   if (gettxtFeedbackValue().equals("A")) {
            populateAttributeAsChanged(AVERAGEFLAG, "Y");
        }
     else   if (gettxtFeedbackValue().equals("P")) {
            populateAttributeAsChanged(POORFLAG, "Y");
        }
     else   if (gettxtFeedbackValue().equals("V")) {
            populateAttributeAsChanged(VERYPOORFLAG, "Y");
        }
        }
        super.doDML(operation, e);
    }
}

