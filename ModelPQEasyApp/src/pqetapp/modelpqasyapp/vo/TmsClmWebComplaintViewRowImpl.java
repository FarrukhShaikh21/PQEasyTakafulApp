package pqetapp.modelpqasyapp.vo;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import pqetapp.modelpqasyapp.vo.common.TmsClmWebComplaintViewRow;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 03 23:31:28 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TmsClmWebComplaintViewRowImpl extends ViewRowImpl implements TmsClmWebComplaintViewRow {


    public static final int ENTITY_TMSCLMWEBCOMPLAINT = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ComplaintIdPk {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getComplaintIdPk();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setComplaintIdPk((Number) value);
            }
        }
        ,
        ComplaintType {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getComplaintType();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setComplaintType((Number) value);
            }
        }
        ,
        ParticularPersonName {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getParticularPersonName();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setParticularPersonName((String) value);
            }
        }
        ,
        Designation {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getDesignation();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setDesignation((String) value);
            }
        }
        ,
        Branch {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getBranch();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setBranch((String) value);
            }
        }
        ,
        DiscussedWithStaffFlag {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getDiscussedWithStaffFlag();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setDiscussedWithStaffFlag((String) value);
            }
        }
        ,
        DiscussedDetail {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getDiscussedDetail();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setDiscussedDetail((String) value);
            }
        }
        ,
        DiscussedPersonName {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getDiscussedPersonName();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setDiscussedPersonName((String) value);
            }
        }
        ,
        DiscussedResult {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getDiscussedResult();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setDiscussedResult((String) value);
            }
        }
        ,
        Remarks {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getRemarks();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        ParticipantIdFk {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getParticipantIdFk();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setParticipantIdFk((BigDecimal) value);
            }
        }
        ,
        EnterDate {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getEnterDate();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setEnterDate((Date) value);
            }
        }
        ,
        TmsClmWebComplaintDtlView {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getTmsClmWebComplaintDtlView();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AccTmsClmStComplaintReasonView {
            public Object get(TmsClmWebComplaintViewRowImpl obj) {
                return obj.getAccTmsClmStComplaintReasonView();
            }

            public void put(TmsClmWebComplaintViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(TmsClmWebComplaintViewRowImpl object);

        public abstract void put(TmsClmWebComplaintViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COMPLAINTIDPK = AttributesEnum.ComplaintIdPk.index();
    public static final int COMPLAINTTYPE = AttributesEnum.ComplaintType.index();
    public static final int PARTICULARPERSONNAME = AttributesEnum.ParticularPersonName.index();
    public static final int DESIGNATION = AttributesEnum.Designation.index();
    public static final int BRANCH = AttributesEnum.Branch.index();
    public static final int DISCUSSEDWITHSTAFFFLAG = AttributesEnum.DiscussedWithStaffFlag.index();
    public static final int DISCUSSEDDETAIL = AttributesEnum.DiscussedDetail.index();
    public static final int DISCUSSEDPERSONNAME = AttributesEnum.DiscussedPersonName.index();
    public static final int DISCUSSEDRESULT = AttributesEnum.DiscussedResult.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int PARTICIPANTIDFK = AttributesEnum.ParticipantIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int TMSCLMWEBCOMPLAINTDTLVIEW = AttributesEnum.TmsClmWebComplaintDtlView.index();
    public static final int ACCTMSCLMSTCOMPLAINTREASONVIEW = AttributesEnum.AccTmsClmStComplaintReasonView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TmsClmWebComplaintViewRowImpl() {
    }

    /**
     * Gets TmsClmWebComplaint entity object.
     * @return the TmsClmWebComplaint
     */
    public EntityImpl getTmsClmWebComplaint() {
        return (EntityImpl) getEntity(ENTITY_TMSCLMWEBCOMPLAINT);
    }

    /**
     * Gets the attribute value for COMPLAINT_ID_PK using the alias name ComplaintIdPk.
     * @return the COMPLAINT_ID_PK
     */
    public Number getComplaintIdPk() {
        return (Number) getAttributeInternal(COMPLAINTIDPK);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPLAINT_ID_PK using the alias name ComplaintIdPk.
     * @param value value to set the COMPLAINT_ID_PK
     */
    public void setComplaintIdPk(Number value) {
        setAttributeInternal(COMPLAINTIDPK, value);
    }

    /**
     * Gets the attribute value for COMPLAINT_TYPE using the alias name ComplaintType.
     * @return the COMPLAINT_TYPE
     */
    public Number getComplaintType() {
        return (Number) getAttributeInternal(COMPLAINTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPLAINT_TYPE using the alias name ComplaintType.
     * @param value value to set the COMPLAINT_TYPE
     */
    public void setComplaintType(Number value) {
        setAttributeInternal(COMPLAINTTYPE, value);
    }

    /**
     * Gets the attribute value for PARTICULAR_PERSON_NAME using the alias name ParticularPersonName.
     * @return the PARTICULAR_PERSON_NAME
     */
    public String getParticularPersonName() {
        return (String) getAttributeInternal(PARTICULARPERSONNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTICULAR_PERSON_NAME using the alias name ParticularPersonName.
     * @param value value to set the PARTICULAR_PERSON_NAME
     */
    public void setParticularPersonName(String value) {
        setAttributeInternal(PARTICULARPERSONNAME, value);
    }

    /**
     * Gets the attribute value for DESIGNATION using the alias name Designation.
     * @return the DESIGNATION
     */
    public String getDesignation() {
        return (String) getAttributeInternal(DESIGNATION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESIGNATION using the alias name Designation.
     * @param value value to set the DESIGNATION
     */
    public void setDesignation(String value) {
        setAttributeInternal(DESIGNATION, value);
    }

    /**
     * Gets the attribute value for BRANCH using the alias name Branch.
     * @return the BRANCH
     */
    public String getBranch() {
        return (String) getAttributeInternal(BRANCH);
    }

    /**
     * Sets <code>value</code> as attribute value for BRANCH using the alias name Branch.
     * @param value value to set the BRANCH
     */
    public void setBranch(String value) {
        setAttributeInternal(BRANCH, value);
    }

    /**
     * Gets the attribute value for DISCUSSED_WITH_STAFF_FLAG using the alias name DiscussedWithStaffFlag.
     * @return the DISCUSSED_WITH_STAFF_FLAG
     */
    public String getDiscussedWithStaffFlag() {
        return (String) getAttributeInternal(DISCUSSEDWITHSTAFFFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for DISCUSSED_WITH_STAFF_FLAG using the alias name DiscussedWithStaffFlag.
     * @param value value to set the DISCUSSED_WITH_STAFF_FLAG
     */
    public void setDiscussedWithStaffFlag(String value) {
        setAttributeInternal(DISCUSSEDWITHSTAFFFLAG, value);
    }

    /**
     * Gets the attribute value for DISCUSSED_DETAIL using the alias name DiscussedDetail.
     * @return the DISCUSSED_DETAIL
     */
    public String getDiscussedDetail() {
        return (String) getAttributeInternal(DISCUSSEDDETAIL);
    }

    /**
     * Sets <code>value</code> as attribute value for DISCUSSED_DETAIL using the alias name DiscussedDetail.
     * @param value value to set the DISCUSSED_DETAIL
     */
    public void setDiscussedDetail(String value) {
        setAttributeInternal(DISCUSSEDDETAIL, value);
    }

    /**
     * Gets the attribute value for DISCUSSED_PERSON_NAME using the alias name DiscussedPersonName.
     * @return the DISCUSSED_PERSON_NAME
     */
    public String getDiscussedPersonName() {
        return (String) getAttributeInternal(DISCUSSEDPERSONNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for DISCUSSED_PERSON_NAME using the alias name DiscussedPersonName.
     * @param value value to set the DISCUSSED_PERSON_NAME
     */
    public void setDiscussedPersonName(String value) {
        setAttributeInternal(DISCUSSEDPERSONNAME, value);
    }

    /**
     * Gets the attribute value for DISCUSSED_RESULT using the alias name DiscussedResult.
     * @return the DISCUSSED_RESULT
     */
    public String getDiscussedResult() {
        return (String) getAttributeInternal(DISCUSSEDRESULT);
    }

    /**
     * Sets <code>value</code> as attribute value for DISCUSSED_RESULT using the alias name DiscussedResult.
     * @param value value to set the DISCUSSED_RESULT
     */
    public void setDiscussedResult(String value) {
        setAttributeInternal(DISCUSSEDRESULT, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for PARTICIPANT_ID_FK using the alias name ParticipantIdFk.
     * @return the PARTICIPANT_ID_FK
     */
    public BigDecimal getParticipantIdFk() {
        return (BigDecimal) getAttributeInternal(PARTICIPANTIDFK);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTICIPANT_ID_FK using the alias name ParticipantIdFk.
     * @param value value to set the PARTICIPANT_ID_FK
     */
    public void setParticipantIdFk(BigDecimal value) {
        setAttributeInternal(PARTICIPANTIDFK, value);
    }

    /**
     * Gets the attribute value for ENTER_DATE using the alias name EnterDate.
     * @return the ENTER_DATE
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTER_DATE using the alias name EnterDate.
     * @param value value to set the ENTER_DATE
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link TmsClmWebComplaintDtlView.
     */
    public RowIterator getTmsClmWebComplaintDtlView() {
        return (RowIterator) getAttributeInternal(TMSCLMWEBCOMPLAINTDTLVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccTmsClmStComplaintReasonView.
     */
    public RowSet getAccTmsClmStComplaintReasonView() {
        return (RowSet) getAttributeInternal(ACCTMSCLMSTCOMPLAINTREASONVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    public void doTMSInsertReasonRows() {
        getAccTmsClmStComplaintReasonView().setRangeSize(-1);
        for (int i = 0; i < getAccTmsClmStComplaintReasonView().getRowCount(); i++) {
            Row r=getTmsClmWebComplaintDtlView().createRow();
            getTmsClmWebComplaintDtlView().insertRow(r);
       }

    }
}

