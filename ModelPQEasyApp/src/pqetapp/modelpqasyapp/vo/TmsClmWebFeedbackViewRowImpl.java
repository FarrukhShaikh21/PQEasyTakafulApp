package pqetapp.modelpqasyapp.vo;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import pqetapp.modelpqasyapp.eo.TmsClmWebFeedbackImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 05 11:54:43 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TmsClmWebFeedbackViewRowImpl extends ViewRowImpl {

    public static final int ENTITY_TMSCLMWEBFEEDBACK = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ClmFeedbackIdFk {
            public Object get(TmsClmWebFeedbackViewRowImpl obj) {
                return obj.getClmFeedbackIdFk();
            }

            public void put(TmsClmWebFeedbackViewRowImpl obj, Object value) {
                obj.setClmFeedbackIdFk((Number) value);
            }
        }
        ,
        FeedbackIdPk {
            public Object get(TmsClmWebFeedbackViewRowImpl obj) {
                return obj.getFeedbackIdPk();
            }

            public void put(TmsClmWebFeedbackViewRowImpl obj, Object value) {
                obj.setFeedbackIdPk((Number) value);
            }
        }
        ,
        ExcellentFlag {
            public Object get(TmsClmWebFeedbackViewRowImpl obj) {
                return obj.getExcellentFlag();
            }

            public void put(TmsClmWebFeedbackViewRowImpl obj, Object value) {
                obj.setExcellentFlag((String) value);
            }
        }
        ,
        GoodFlag {
            public Object get(TmsClmWebFeedbackViewRowImpl obj) {
                return obj.getGoodFlag();
            }

            public void put(TmsClmWebFeedbackViewRowImpl obj, Object value) {
                obj.setGoodFlag((String) value);
            }
        }
        ,
        AverageFlag {
            public Object get(TmsClmWebFeedbackViewRowImpl obj) {
                return obj.getAverageFlag();
            }

            public void put(TmsClmWebFeedbackViewRowImpl obj, Object value) {
                obj.setAverageFlag((String) value);
            }
        }
        ,
        PoorFlag {
            public Object get(TmsClmWebFeedbackViewRowImpl obj) {
                return obj.getPoorFlag();
            }

            public void put(TmsClmWebFeedbackViewRowImpl obj, Object value) {
                obj.setPoorFlag((String) value);
            }
        }
        ,
        VeryPoorFlag {
            public Object get(TmsClmWebFeedbackViewRowImpl obj) {
                return obj.getVeryPoorFlag();
            }

            public void put(TmsClmWebFeedbackViewRowImpl obj, Object value) {
                obj.setVeryPoorFlag((String) value);
            }
        }
        ,
        EnterDate {
            public Object get(TmsClmWebFeedbackViewRowImpl obj) {
                return obj.getEnterDate();
            }

            public void put(TmsClmWebFeedbackViewRowImpl obj, Object value) {
                obj.setEnterDate((Date) value);
            }
        }
        ,
        ParticipantIdFk {
            public Object get(TmsClmWebFeedbackViewRowImpl obj) {
                return obj.getParticipantIdFk();
            }

            public void put(TmsClmWebFeedbackViewRowImpl obj, Object value) {
                obj.setParticipantIdFk((Number) value);
            }
        }
        ,
        txtFeedbackValue {
            public Object get(TmsClmWebFeedbackViewRowImpl obj) {
                return obj.gettxtFeedbackValue();
            }

            public void put(TmsClmWebFeedbackViewRowImpl obj, Object value) {
                obj.settxtFeedbackValue((String) value);
            }
        }
        ,
        AccTmsClmStFeedbackView {
            public Object get(TmsClmWebFeedbackViewRowImpl obj) {
                return obj.getAccTmsClmStFeedbackView();
            }

            public void put(TmsClmWebFeedbackViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(TmsClmWebFeedbackViewRowImpl object);

        public abstract void put(TmsClmWebFeedbackViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLMFEEDBACKIDFK = AttributesEnum.ClmFeedbackIdFk.index();
    public static final int FEEDBACKIDPK = AttributesEnum.FeedbackIdPk.index();
    public static final int EXCELLENTFLAG = AttributesEnum.ExcellentFlag.index();
    public static final int GOODFLAG = AttributesEnum.GoodFlag.index();
    public static final int AVERAGEFLAG = AttributesEnum.AverageFlag.index();
    public static final int POORFLAG = AttributesEnum.PoorFlag.index();
    public static final int VERYPOORFLAG = AttributesEnum.VeryPoorFlag.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int PARTICIPANTIDFK = AttributesEnum.ParticipantIdFk.index();
    public static final int TXTFEEDBACKVALUE = AttributesEnum.txtFeedbackValue.index();
    public static final int ACCTMSCLMSTFEEDBACKVIEW = AttributesEnum.AccTmsClmStFeedbackView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TmsClmWebFeedbackViewRowImpl() {
    }

    /**
     * Gets TmsClmWebFeedback entity object.
     * @return the TmsClmWebFeedback
     */
    public TmsClmWebFeedbackImpl getTmsClmWebFeedback() {
        return (TmsClmWebFeedbackImpl) getEntity(ENTITY_TMSCLMWEBFEEDBACK);
    }

    /**
     * Gets the attribute value for CLM_FEEDBACK_ID_FK using the alias name ClmFeedbackIdFk.
     * @return the CLM_FEEDBACK_ID_FK
     */
    public Number getClmFeedbackIdFk() {
        return (Number) getAttributeInternal(CLMFEEDBACKIDFK);
    }

    /**
     * Sets <code>value</code> as attribute value for CLM_FEEDBACK_ID_FK using the alias name ClmFeedbackIdFk.
     * @param value value to set the CLM_FEEDBACK_ID_FK
     */
    public void setClmFeedbackIdFk(Number value) {
        setAttributeInternal(CLMFEEDBACKIDFK, value);
    }

    /**
     * Gets the attribute value for FEEDBACK_ID_PK using the alias name FeedbackIdPk.
     * @return the FEEDBACK_ID_PK
     */
    public Number getFeedbackIdPk() {
        return (Number) getAttributeInternal(FEEDBACKIDPK);
    }

    /**
     * Sets <code>value</code> as attribute value for FEEDBACK_ID_PK using the alias name FeedbackIdPk.
     * @param value value to set the FEEDBACK_ID_PK
     */
    public void setFeedbackIdPk(Number value) {
        setAttributeInternal(FEEDBACKIDPK, value);
    }

    /**
     * Gets the attribute value for EXCELLENT_FLAG using the alias name ExcellentFlag.
     * @return the EXCELLENT_FLAG
     */
    public String getExcellentFlag() {
        return (String) getAttributeInternal(EXCELLENTFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for EXCELLENT_FLAG using the alias name ExcellentFlag.
     * @param value value to set the EXCELLENT_FLAG
     */
    public void setExcellentFlag(String value) {
//        setAttributeInternal(GOODFLAG, "N");
        setAttributeInternal(EXCELLENTFLAG, value);
    }

    /**
     * Gets the attribute value for GOOD_FLAG using the alias name GoodFlag.
     * @return the GOOD_FLAG
     */
    public String getGoodFlag() {
        return (String) getAttributeInternal(GOODFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for GOOD_FLAG using the alias name GoodFlag.
     * @param value value to set the GOOD_FLAG
     */
    public void setGoodFlag(String value) {
        System.out.println("this is being called from ex");
        setAttributeInternal(GOODFLAG, value);
    }

    /**
     * Gets the attribute value for AVERAGE_FLAG using the alias name AverageFlag.
     * @return the AVERAGE_FLAG
     */
    public String getAverageFlag() {
        return (String) getAttributeInternal(AVERAGEFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for AVERAGE_FLAG using the alias name AverageFlag.
     * @param value value to set the AVERAGE_FLAG
     */
    public void setAverageFlag(String value) {
        setAttributeInternal(AVERAGEFLAG, value);
    }

    /**
     * Gets the attribute value for POOR_FLAG using the alias name PoorFlag.
     * @return the POOR_FLAG
     */
    public String getPoorFlag() {
        return (String) getAttributeInternal(POORFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for POOR_FLAG using the alias name PoorFlag.
     * @param value value to set the POOR_FLAG
     */
    public void setPoorFlag(String value) {
        setAttributeInternal(POORFLAG, value);
    }

    /**
     * Gets the attribute value for VERY_POOR_FLAG using the alias name VeryPoorFlag.
     * @return the VERY_POOR_FLAG
     */
    public String getVeryPoorFlag() {
        return (String) getAttributeInternal(VERYPOORFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for VERY_POOR_FLAG using the alias name VeryPoorFlag.
     * @param value value to set the VERY_POOR_FLAG
     */
    public void setVeryPoorFlag(String value) {
        setAttributeInternal(VERYPOORFLAG, value);
    }

    /**
     * Gets the attribute value for ENTER_DATE using the alias name EnterDate.
     * @return the ENTER_DATE
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTER_DATE using the alias name EnterDate.
     * @param value value to set the ENTER_DATE
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for PARTICIPANT_ID_FK using the alias name ParticipantIdFk.
     * @return the PARTICIPANT_ID_FK
     */
    public Number getParticipantIdFk() {
        return (Number) getAttributeInternal(PARTICIPANTIDFK);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTICIPANT_ID_FK using the alias name ParticipantIdFk.
     * @param value value to set the PARTICIPANT_ID_FK
     */
    public void setParticipantIdFk(Number value) {
        setAttributeInternal(PARTICIPANTIDFK, value);
    }

    /**
     * Gets the attribute value for TXT_FEEDBACK_VALUE using the alias name txtFeedbackValue.
     * @return the TXT_FEEDBACK_VALUE
     */
    public String gettxtFeedbackValue() {
        return (String) getAttributeInternal(TXTFEEDBACKVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for TXT_FEEDBACK_VALUE using the alias name txtFeedbackValue.
     * @param value value to set the TXT_FEEDBACK_VALUE
     */
    public void settxtFeedbackValue(String value) {
        setAttributeInternal(TXTFEEDBACKVALUE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccTmsClmStFeedbackView.
     */
    public RowSet getAccTmsClmStFeedbackView() {
        return (RowSet) getAttributeInternal(ACCTMSCLMSTFEEDBACKVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

